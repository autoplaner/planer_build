#!/bin/sh

# This script installs the Nix package manager on your system by
# downloading a binary distribution and running its installer script
# (which in turn creates and populates /nix).

{ # Prevent execution if this script was only partially downloaded
oops() {
    echo "$0:" "$@" >&2
    exit 1
}

umask 0022

tmpDir="$(mktemp -d -t nix-binary-tarball-unpack.XXXXXXXXXX || \
          oops "Can't create temporary directory for downloading the Nix binary tarball")"
cleanup() {
    rm -rf "$tmpDir"
}
trap cleanup EXIT INT QUIT TERM

require_util() {
    command -v "$1" > /dev/null 2>&1 ||
        oops "you do not have '$1' installed, which I need to $2"
}

case "$(uname -s).$(uname -m)" in
    Linux.x86_64)
        hash=c4589f1968565e84ca9501307f269e62b8e3154aec891afc582a06a35aad4d7e
        path=rwczbq9x1vwc9c32is6vq29bqggyss83/nix-2.18.2-x86_64-linux.tar.xz
        system=x86_64-linux
        ;;
    Linux.i?86)
        hash=4ee6ac37033167a06f2f89beeba8b186116b2b580932ab58230c10365d4d6531
        path=x7zm805cim20k1z2nwr2z5kfl6rcq725/nix-2.18.2-i686-linux.tar.xz
        system=i686-linux
        ;;
    Linux.aarch64)
        hash=bbec86aa3fc2fb84b612aa944f9bc1dcedd0f9bcb75ca1842e5d35372e9662b3
        path=a3ghnbd7yrxvmxrdc6dn1scwaf1ddp6n/nix-2.18.2-aarch64-linux.tar.xz
        system=aarch64-linux
        ;;
    Linux.armv6l)
        hash=b4e06f2bd9046653acae179f5d604c0b57c8009e91e7574c170b2cf9ddcaf0a2
        path=0ylsf2w2v9x0xw3m3q8q0ifpy9ak9jcb/nix-2.18.2-armv6l-linux.tar.xz
        system=armv6l-linux
        ;;
    Linux.armv7l)
        hash=06136d8593e5530ba5edc815776424b178711697ce0ccb1300b51d89d37cf789
        path=g7x5pcmlnba33rj9r3fg8f9yacpdm3bz/nix-2.18.2-armv7l-linux.tar.xz
        system=armv7l-linux
        ;;
    Darwin.x86_64)
        hash=7879feae4f603197810e42a16958d444b3987a99c47b0b5da2e6b9f2e92a34a4
        path=jnssrnw0d8ypd0n1ypangy1dj6ic3kak/nix-2.18.2-x86_64-darwin.tar.xz
        system=x86_64-darwin
        ;;
    Darwin.arm64|Darwin.aarch64)
        hash=fc5f2a2954728d38e5e43422b50b1a9e9149c6647c4d682da2812fdad7e0787b
        path=97b8ycgjbmadnwkdnb63apc6qb7blbxb/nix-2.18.2-aarch64-darwin.tar.xz
        system=aarch64-darwin
        ;;
    *) oops "sorry, there is no binary distribution of Nix for your platform";;
esac

# Use this command-line option to fetch the tarballs using nar-serve or Cachix
if [ "${1:-}" = "--tarball-url-prefix" ]; then
    if [ -z "${2:-}" ]; then
        oops "missing argument for --tarball-url-prefix"
    fi
    url=${2}/${path}
    shift 2
else
    url=https://releases.nixos.org/nix/nix-2.18.2/nix-2.18.2-$system.tar.xz
fi

tarball=$tmpDir/nix-2.18.2-$system.tar.xz

require_util tar "unpack the binary tarball"
if [ "$(uname -s)" != "Darwin" ]; then
    require_util xz "unpack the binary tarball"
fi

if command -v curl > /dev/null 2>&1; then
    fetch() { curl --fail -L "$1" -o "$2"; }
elif command -v wget > /dev/null 2>&1; then
    fetch() { wget "$1" -O "$2"; }
else
    oops "you don't have wget or curl installed, which I need to download the binary tarball"
fi

echo "downloading Nix 2.18.2 binary tarball for $system from '$url' to '$tmpDir'..."
fetch "$url" "$tarball" || oops "failed to download '$url'"

if command -v sha256sum > /dev/null 2>&1; then
    hash2="$(sha256sum -b "$tarball" | cut -c1-64)"
elif command -v shasum > /dev/null 2>&1; then
    hash2="$(shasum -a 256 -b "$tarball" | cut -c1-64)"
elif command -v openssl > /dev/null 2>&1; then
    hash2="$(openssl dgst -r -sha256 "$tarball" | cut -c1-64)"
else
    oops "cannot verify the SHA-256 hash of '$url'; you need one of 'shasum', 'sha256sum', or 'openssl'"
fi

if [ "$hash" != "$hash2" ]; then
    oops "SHA-256 hash mismatch in '$url'; expected $hash, got $hash2"
fi

unpack=$tmpDir/unpack
mkdir -p "$unpack"
tar -xJf "$tarball" -C "$unpack" || oops "failed to unpack '$url'"

script=$(echo "$unpack"/*/install)

[ -e "$script" ] || oops "installation script is missing from the binary tarball!"
export INVOKED_FROM_INSTALL_IN=1
"$script" "$@"

} # End of wrapping
